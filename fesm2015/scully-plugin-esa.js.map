{"version":3,"file":"scully-plugin-esa.js","sources":["../../../projects/scully-plugin-esa/src/lib/esa-post-process.ts","../../../projects/scully-plugin-esa/src/lib/esa-route-process.ts","../../../projects/scully-plugin-esa/src/public-api.ts","../../../projects/scully-plugin-esa/src/scully-plugin-esa.ts"],"sourcesContent":["import { registerPlugin, HandledRoute } from '@scullyio/scully';\n\n// @ts-ignore\nimport { JSDOM } from 'jsdom';\n\nconst Plugin = async (dom?: JSDOM, route?: HandledRoute): Promise<JSDOM> => {\n  if (!dom) return new JSDOM();\n\n  // Find codeblocks recognized by code syntax highlighter\n  let codeblocks = dom.window.document.querySelectorAll('code[class^=\"language-\"]');\n  for (let i = 0; i < codeblocks.length; i++) {\n    let codeblockFileName = null;\n    let codeblockFileExtension = null;\n\n    // Find invalid class names\n    // (If the class name contains the filename or path not just extension, it will not be recognized correctly by code syntax highlighter.)\n    // @ts-ignore\n    const targetClassName = Array.from(codeblocks[i].classList).find((className: string) => {\n      if (className.match(/^language-(.+\\.(.+))$/)) {\n        codeblockFileName = RegExp.$1;\n        codeblockFileExtension = RegExp.$2;\n        return true;\n      }\n      return false;\n    });\n\n    if (!codeblockFileName || !codeblockFileExtension || !targetClassName) continue;\n\n    // Fix the class name\n    const validClassName = `language-${codeblockFileExtension}`;\n    codeblocks[i].classList.replace(targetClassName, validClassName);\n\n    // Append the filename as a new element\n    const filenameLabel = dom.window.document.createElement('span');\n    filenameLabel.innerHTML = codeblockFileName;\n    filenameLabel.style.background = '#ffffffaa';\n    filenameLabel.style.fontSize = '0.6rem';\n    filenameLabel.style.padding = '0.2rem 1rem 0.2rem 1rem';\n    const filenameLabelContainer = dom.window.document.createElement('div');\n    filenameLabelContainer.appendChild(filenameLabel);\n    filenameLabelContainer.className = 'esa-codeblock-filename';\n    filenameLabelContainer.style.position = 'absolute';\n    filenameLabelContainer.style.left = '0px';\n    filenameLabelContainer.style.top = '0px';\n    filenameLabelContainer.style.lineHeight = '1rem';\n    const filenameLabelSpacer = dom.window.document.createElement('div');\n    filenameLabelSpacer.style.fontSize = '0.5rem';\n    filenameLabelSpacer.innerHTML = '&#8203;'; // zero width space character\n    if (codeblocks[i] && codeblocks[i].parentNode && codeblocks[i].parentNode != null) {\n      codeblocks[i].parentNode?.insertBefore(filenameLabelSpacer, codeblocks[i]);\n      codeblocks[i].parentNode?.insertBefore(filenameLabelContainer, codeblocks[i]);\n    }\n  }\n\n  return dom;\n};\n\nregisterPlugin('postProcessByDom', 'esaPostProcess', Plugin);\n","import { registerPlugin, HandledRoute } from '@scullyio/scully';\nimport * as fs from 'fs/promises';\nimport { marked } from 'marked';\n\n// @ts-ignore\nimport { JSDOM } from 'jsdom';\n\nconst Plugin = async (routes?: HandledRoute[], config = {}): Promise<HandledRoute[]> => {\n  if (!routes) {\n    return [];\n  }\n\n  for (let i = 0, l = routes.length; i < l; i++) {\n    const route = routes[i];\n\n    if (route.type !== 'contentFolder') continue;\n\n    if (route.data === undefined) {\n      route.data = {};\n    }\n\n    // Remove strange extension (\".html\") added by esa from the url\n    if (route.templateFile?.match(/\\.html\\.md$/)) {\n      route.route = route.route.replace(/\\.html$/, '');\n    }\n\n    // Convert tags string to array\n    if (route.data && route.data.tags && typeof route.data.tags == 'string') {\n      route.data.tags = route.data.tags.split(/\\s*,\\s*/);\n    }\n\n    // Parse file\n    if (route.templateFile && route.templateFile.match(/\\.md$/)) {\n      try {\n        let markdown = await fs.readFile(route.templateFile, 'utf-8');\n        let markdownLines = markdown.split(/\\n/);\n        let endLineOfMetaData = 0;\n        for (let i = 1; i < markdownLines.length; i++) {\n          if (markdownLines[i].match(/^---$/)) {\n            endLineOfMetaData = i;\n            break;\n          }\n        }\n        markdown = markdownLines.slice(endLineOfMetaData + 1).join('\\n');\n\n        const html = marked.parse(markdown);\n        const dom = new JSDOM(html);\n\n        // Extract beginning text\n        route.data.beginningText = '';\n        const paragraphs = dom.window.document.querySelectorAll('p');\n        for (let i = 0; i < paragraphs.length; i++) {\n          const paragraph = paragraphs[i];\n          if (paragraph.textContent?.length) {\n            route.data.beginningText += paragraph.textContent;\n          }\n          if (route.data.beginningText.length > 200) {\n            break;\n          }\n        }\n\n        // Extract images\n        route.data.imageUrls = [];\n        const imageElems = dom.window.document.querySelectorAll('img');\n        for (let i = 0; i < imageElems.length; i++) {\n          const image = imageElems[i];\n          route.data.imageUrls.push(image.src);\n        }\n      } catch (e: any) {\n        console.error(`[EsaRouteProcess]`, e);\n      }\n    } else {\n      console.warn(`[EsaRouteProcess]`, 'Could not parse file', route.templateFile);\n    }\n\n    routes[i] = route;\n  }\n\n  return routes;\n};\n\nregisterPlugin('routeProcess', 'esaRouteProcess', Plugin, 100);\n","/*\n * Public API Surface of scully-plugin-esa\n */\n\nexport * from './lib/esa-post-process';\nexport * from './lib/esa-route-process';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Plugin"],"mappings":"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"}